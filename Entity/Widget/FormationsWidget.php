<?phpnamespace Icap\PortfolioBundle\Entity\Widget;use Doctrine\Common\Collections\ArrayCollection;use Doctrine\ORM\Mapping as ORM;use Gedmo\Mapping\Annotation as Gedmo;use Symfony\Component\Validator\Constraints as Assert;/** * @ORM\Table(name="icap__portfolio_widget_formations") * @ORM\Entity */class FormationsWidget extends AbstractWidget{    protected $widgetType = 'formations';    /**     * @var FormationsWidgetFormation[]|\Doctrine\ORM\PersistentCollection     *     * @ORM\OneToMany(targetEntity="Icap\PortfolioBundle\Entity\Widget\FormationsWidgetFormation", mappedBy="widget", cascade={"persist", "remove"})     */    protected $formations;    public function __construct()    {        $this->formations = new ArrayCollection();    }    /**     * @param \Icap\PortfolioBundle\Entity\Widget\FormationsWidgetFormation[] $formations     *     * @return FormationsWidget     */    public function setFormations($formations)    {        foreach ($formations as $skill) {            $skill->setWidget($this);        }        $this->formations = $formations;        return $this;    }    /**     * @return \Icap\PortfolioBundle\Entity\Widget\FormationsWidgetFormation[]     */    public function getFormations()    {        return $this->formations;    }    /**     * @return array     */    public function getData()    {        $data = array(            'id'       => $this->getId(),            'children' => array()        );        foreach ($this->getFormations() as $formation) {            $data['children'][] = $formation->getData();        }        return $data;    }    /**     * @return array     */    public function getEmpty()    {        return array(            'children' => array()        );    }    /**     * @return array     */    public function getChildren()    {        return $this->getFormations();    }}